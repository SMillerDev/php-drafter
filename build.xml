<?xml version="1.0" encoding="UTF-8"?>
<project name="PHPDraft" default="setup">
    <target name="setup" depends="clean"/>
    <property name="min-php-version" value="8.1.0"/>

    <target name="clean" unless="clean.done" description="Cleanup build artifacts">
        <delete dir="${project.basedir}/build/coverage"/>
        <delete dir="${project.basedir}/build/phar"/>
        <delete dir="${project.basedir}/build/out"/>
        <delete dir="${project.basedir}/build/tmp"/>
        <delete>
            <fileset dir="${project.basedir}/build">
                <include name="**/phpdraft*.phar"/>
                <include name="**/phpdraft*.phar.asc"/>
            </fileset>
        </delete>

        <mkdir dir="${project.basedir}/build/coverage"/>
        <mkdir dir="${project.basedir}/build/phar"/>
        <mkdir dir="${project.basedir}/build/out"/>
        <mkdir dir="${project.basedir}/build/tmp"/>

        <property name="clean.done" value="true"/>
    </target>

    <target name="phar" depends="-phar-prepare"
            description="Create PHAR archive of PHPDraft and all its dependencies">
        <phingcall target="-phar-build">
            <param name="type" value="release"/>
        </phingcall>
    </target>

    <target name="phar-nightly" depends="-phar-prepare"
            description="Create PHAR archive of PHPDraft and all its dependencies (nightly)">
        <phingcall target="-phar-build">
            <param name="type" value="nightly"/>
        </phingcall>
    </target>

    <target name="-phar-prepare" depends="clean">
        <mkdir dir="${project.basedir}/build/phar"/>
        <mkdir dir="${project.basedir}/build/out"/>
        <copy file="${project.basedir}/LICENSE" tofile="${project.basedir}/build/phar/LICENSE"/>
        <exec executable="${project.basedir}/build/phar-manifest.php" output="${project.basedir}/build/phar/manifest.txt"/>
    </target>

    <target name="-phar-build" depends="-phar-determine-version">
        <fail unless="version" message="No version defined!" />
        <copy todir="${project.basedir}/build/phar/phpdraft/src">
            <fileset dir="${project.basedir}/src/">
                <exclude name="**/*Test.php*"/>
                <exclude name="**/*TestBase.php*"/>
                <include name="**/*.php"/>
                <include name="**/*.twig"/>
                <include name="**/*.phtml"/>
                <include name="**/*.js*"/>
                <include name="**/*.css*"/>
            </fileset>
            <fileset dir="vendor/michelf/php-markdown/Michelf/">
                <include name="**/*.php"/>
                <exclude name="**/Readme.php"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/Rize">
            <fileset dir="vendor/rize/uri-template/src">
                <include name="**/*.php"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/Lukasoppermann/Httpstatus">
            <fileset dir="vendor/lukasoppermann/http-status/src">
                <include name="**/*.php"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/Garden/Cli">
            <fileset dir="vendor/vanilla/garden-cli/src">
                <include name="**/*.php"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/Twig">
            <fileset dir="vendor/twig/twig/src">
                <include name="**/*.php"/>
                <exclude name="Test/**"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/Twig/Extra/Markdown">
            <fileset dir="vendor/twig/markdown-extra">
                <include name="*.php"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/MatthiasMullie/Minify">
            <fileset dir="vendor/matthiasmullie/minify/src">
                <include name="**/*.php"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/MatthiasMullie/data">
            <fileset dir="vendor/matthiasmullie/minify/data">
                <include name="**/*.txt"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/MatthiasMullie/PathConverter">
            <fileset dir="vendor/matthiasmullie/path-converter/src">
                <include name="**/*.php"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft/src/Psr/Log">
            <fileset dir="vendor/psr/log/src">
                <include name="**/*.php"/>
                <exclude name="**/*Test.php*"/>
            </fileset>
        </copy>
        <copy todir="${project.basedir}/build/phar/phpdraft">
            <fileset dir="${project.basedir}">
                <include name="**/phpdraft"/>
                <exclude name="vendor/**"/>
            </fileset>
        </copy>

        <exec executable="perl">
            <arg value="-pi"/>
            <arg value="-e"/>
            <arg value="s/\'vendor\/autoload.php/__DIR__\ .\ \'\/src\/PHPDraft\/Core\/Autoloader.php/g"/>
            <arg value="${project.basedir}/build/phar/phpdraft/phpdraft"/>
        </exec>

        <exec executable="php" outputProperty="_version">
            <arg file="${project.basedir}/build/phar-version.php"/>
            <arg value="${version}"/>
            <arg value="${type}"/>
        </exec>
        <echo message="Building version: ${version}, type: ${type}, output: ${_version}"/>
        <fail unless="_version" message="Could not construct version parameter!" />

        <exec executable="${project.basedir}/vendor/bin/phpab" taskname="phpab">
            <arg value="--all"/>
            <arg value="--static"/>
            <arg value="--once"/>
            <arg value="--phar"/>
            <arg value="--hash"/>
            <arg value="SHA-512"/>
            <arg value="--output"/>
            <arg path="${project.basedir}/build/out/phpdraft-library-${_version}.phar"/>
            <arg value="--template"/>
            <arg path="${project.basedir}/build/library-phar-autoload.php.in"/>
            <arg path="${project.basedir}/build/phar"/>
        </exec>

        <exec executable="${project.basedir}/vendor/bin/phpab" taskname="phpab">
            <arg value="--all"/>
            <arg value="--nolower"/>
            <arg value="--static"/>
            <arg value="--phar"/>
            <arg value="--once"/>
            <arg value="--var"/>
            <arg value="PHPMINVER=${min-php-version}"/>
            <arg value="--hash"/>
            <arg value="SHA-512"/>
            <arg value="--output"/>
            <arg path="${project.basedir}/build/out/phpdraft-${_version}.phar"/>
            <arg value="--template"/>
            <arg path="${project.basedir}/build/binary-phar-autoload.php.in"/>
            <arg path="${project.basedir}/build/phar"/>
        </exec>

        <chmod file="${project.basedir}/build/out/phpdraft-${_version}.phar" mode="0555"/>
    </target>

    <target name="-dependencies-installed">
        <available file="${project.basedir}/composer.lock" property="dependencies-installed"/>
    </target>

    <target name="install-dependencies" unless="dependencies-installed" depends="-dependencies-installed,validate-composer-json" description="Install dependencies with Composer">
        <exec executable="composer" taskname="composer">
            <arg value="update"/>
            <arg value="--no-interaction"/>
            <arg value="--no-progress"/>
            <arg value="--no-ansi"/>
            <arg value="--no-suggest"/>
            <arg value="--optimize-autoloader"/>
            <arg value="--prefer-stable"/>
        </exec>
    </target>

    <target name="validate-composer-json" unless="validate-composer-json.done" description="Validate composer.json">
        <exec executable="composer" checkreturn="true" taskname="composer">
            <arg value="validate"/>
            <arg value="--no-check-lock"/>
            <arg value="--strict"/>
            <arg value="${project.basedir}/composer.json"/>
        </exec>

        <property name="validate-composer-json.done" value="true"/>
    </target>

    <target name="-phar-determine-version">
        <exec command="php ${project.basedir}/phpdraft --version | grep -ohE '([0-9]{1,}\.)+[0-9]{1,}-?(rc|beta)?[0-9]?'" outputproperty="version"/>
    </target>
</project>
